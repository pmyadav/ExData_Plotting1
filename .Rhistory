gdpdf$V1==''
NullCountry <- gdpdf$V1==''
gdp[NullCountry,]
gdp[-1*NullCountry,]
gdp[!NullCountry,]
cntrygdp <- gdp[!NullCountry,]
NullRank <- gdpds$V2==''
NullRank <- gdpdf$V2==''
cntryrankgdp <- cntrygdp[!NullRank,]
View(cntryrankgdp)
NullRank <- gdp$V2==''
cntryrankgdp <- cntrygdp[!NullRank,]
View(cntryrankgdp)
View(ed)
ed <- read.table("C:/DataScientist/Getting And Cleaning Data/data/getdata-data-EDSTATS_Country.csv", sep=",", quote="\"", fill = TRUE, header=TRUE)
View(ed)
NullCountry <- ed$V1==''
cntryed <- ed[!NullCountry,]
View(cntryed)
NullCountry <- ed$CountryCode==''
cntryed <- ed[!NullCountry,]
View(cntryed)
gdp_ed <- merge(cntryrankgdp, cntryed, by.x="V1", by.y="CountryCode")
dim(gdp_ed)
arrange(gdp_ed, desc(V2))
sorted_gdp_ed<-arrange(gdp_ed, desc(V2))
View(sorted_gdp_ed)
?as.numeric
sorted_gdp_ed<-arrange(gdp_ed, desc(as.numeric(V2))
)
View(sorted_gdp_ed)
mutate(gdp_ed, V2=as.numeric(V2))
num_gdp_ed <- mutate(gdp_ed, V2=as.numeric(V2))
View(num_gdp_ed)
sorted_gdp_ed<-arrange(gdp_ed, desc(V2))
View(sorted_gdp_ed)
sorted_gdp_ed<-arrange(gdp_ed, desc(V5))
View(sorted_gdp_ed)
num_gdp_ed <- mutate(gdp_ed, V2=as.numeric(V5))
sorted_gdp_ed<-arrange(gdp_ed, desc(V5))
View(sorted_gdp_ed)
gdp_ed_tbl <- as.data.table(gdp_ed)
sorted_gdp_ed<-arrange(gdp_ed, desc(V2))
View(sorted_gdp_ed)
sorted_gdp_ed<-arrange(gdp_ed_tbl, desc(V2))
View(sorted_gdp_ed)
?arrange
library(dplyr)
sorted_gdp_ed<-arrange(gdp_ed_tbl, desc(V2))
View(sorted_gdp_ed)
gdp_ed[21,V2]
gdp_ed[21,"V2"]
num_gdp_ed[21,"V2"]
num_gdp_ed[22,"V2"]
num_gdp_ed[54,"V2"]
View(num_gdp_ed)
num_gdp_ed[51,"V2"]
num_gdp_ed[53,"V2"]
num_gdp_ed[51,"V2"] < num_gdp_ed[53,"V2"]
num_gdp_ed[53,"V2"] < num_gdp_ed[54,"V2"]
as.numeric(num_gdp_ed[53,"V2"]) < as.numeric(num_gdp_ed[54,"V2"])
?as.numeric
View(gdp_ed)
by_incomeGroup <- group_by(gdp_ed, Income.Group)
summarize(by_incomeGroup, mean(V2))
rankgdp <- gdp[!NullRank,]
View(rankgdp)
rankgdp_ed <- merge(rankgdp, ed, by.x="V1", by.y="CountryCode")
View(rankgdp_ed)
by_incomeGroup <- group_by(rankgdp_ed, Income.Group)
summarize(by_incomeGroup, mean(V2))
?quantile
quantile(gdp$v2, probs=c(0.2,0.4,0.6,0.8))
quantile(rankgdp$v2, probs=c(0.2,0.4,0.6,0.8))
quantile(rankgdp_ed$v2, probs=c(0.2,0.4,0.6,0.8))
quantile(rankgdp_ed$v2, probs=c(0.2,0.4,0.6,0.8), NA.rm=TRUE)
quantile(rankgdp$v2, probs=c(0.2,0.4,0.6,0.8), NA.rm=TRUE)
rankgdp$V2
quantile(rankgdp$V2, probs=c(0.2,0.4,0.6,0.8), NA.rm=TRUE)
quantile(rankgdp$V2, probs=c(0.2,0.4,0.6,0.8), na.rm=TRUE)
library(dplyr)
quantile(rankgdp$V2, probs=c(0.2,0.4,0.6,0.8), na.rm=TRUE)
quantile(cntrygdp$V2, probs=c(0.2,0.4,0.6,0.8), na.rm=TRUE)
quantile(cntrygdp, probs=c(0.2,0.4,0.6,0.8), na.rm=TRUE)
quantile(cntrygdp[,2], probs=c(0.2,0.4,0.6,0.8), na.rm=TRUE)
cntrygdp<- mutate(cntrygdp, V2=as.numeric(V2))
is.numeric(cntrygdp[1,2])
sum(cntrygdp[,2])
is.numeric(cntrygdp$V2)
sum(cntrygdp$V2)
quantile(cntrygdp$V2, probs=c(0.2,0.4,0.6,0.8))
cntrygdp[(cntrygdp$V2=>10.4 & cntryGDP$V2<=55.8),]
cntrygdp[(cntrygdp$V2>=10.4 & cntryGDP$V2<=55.8),]
cntrygdp[(cntrygdp$V2>=10.4 & cntrygdp$V2<=55.8),]
View(cntrygdp)
highOECD <- rankgdp_ed[Income.Group==High income: nonOECD,]
highOECD <- rankgdp_ed[rankgdp_ed$Income.Group=="High income: nonOECD",]
View(highOECD)
sum(highOECD$V2)
mean(highOECD$V2)
highOECD <- mutate(highOECD, V2=as.numeric(V2))
sum(highOECD$V2)
mean(highOECD$V2)
highOECD <- rankgdp_ed[rankgdp_ed$Income.Group=="High income: OECD",]
highOECD <- mutate(highOECD, V2=as.numeric(V2))
View(highOECD)
mean(highOECD$V2)
sum(highOECD$V2)
highnonOECD <- rankgdp_ed[rankgdp_ed$Income.Group=="High income: nonOECD",]
highnonOECD <- mutate(highnonOECD, V2=as.numeric(V2))
View(highnonOECD)
sum(highnonOECD$V2)
mean(highnonOECD$V2)
cntrygdp <- mutate(cntrygdp, V2=as.numeric(V2))
View(cntrygdp)
cntrygdp<-arrange(cntrygdp, desc(V2))
View(cntrygdp)
gdp_ed <- mutate(gdp_ed, V2=as.numeric(V2))
View(gdp_ed)
gdp_ed<-arrange(gdp_ed, desc(V2))
View(gdp_ed)
gdp_ed <- mutate(gdp_ed, V5=as.numeric(V5))
gdp_ed<-arrange(gdp_ed, desc(V5))
View(gdp_ed)
gdp_ed <- merge(cntryrankgdp, cntryed, by.x="V1", by.y="CountryCode")
View(gdp_ed)
as.numeric(V5)
as.numeric(gdp_ed$V5)
View(gdp)
gdp<-mutate(gdp, V2=as.numeric(V2))
View(gdp)
as.numeric
?as.numeric
gdp <- read.table("C:/DataScientist/Getting And Cleaning Data/data/getdata-data-GDP.csv", sep=",", quote="\"", fill = TRUE, skip = 5)
View(gdp)
arrange(gdp_ed, desc(V2))
arrange(gdp, desc(V2))
View(gdp)
x <- arrange(gdp, desc(V2))
select (x, V1:V2)
x <- arrange(gdp_ed, desc(V2))
View(x)
is.numeric(x$V2)
is.double(x$V2)
x<-mutate(x, V2=as.numeric(V2))
View(x)
x <- gdp
View(x)
x <- gdp_ed
View(x)
as.numeric(x$V2)
X <- transform(x, V2=as.numeric(V2), V5=as.numeric(V5))
sapply(x, class)
sapply(X, class)
View(X)
?factor
sapply(X$V2, class)
sapply(X, mode)
sapply(x, mode)
View(x)
sapply(x, mode)
sapply(x, class)
x[order(score$V2)]
x[order(x$V2)]
x[order(x$V2),]
X <- with(x,x[order(V2),])
View(X)
x[1,2]
as.numeric(x[1,2])
arrange(x, V2)
X<-arrange(x, V2)
View(X)
as.numeric(X[1,1])
as.numeric(X[1,2])
as.numeric(X[2,2])
as.numeric(X[13,2])
gdp <- read.csv("C:/DataScientist/Getting And Cleaning Data/data/getdata-data-GDP.csv", sep=",", quote="\"", fill = TRUE, skip = 5)
NullCountry <- gdp$V1==''
cntrygdp <- gdp[!NullCountry,]
View(cntrygdp)
View(gdp)
gdp <- read.csv("C:/DataScientist/Getting And Cleaning Data/data/getdata-data-GDP.csv", sep=",", quote="\"", fill = TRUE, skip = 4)
View(gdp)
gdp <- read.csv("C:/DataScientist/Getting And Cleaning Data/data/getdata-data-GDP.csv", sep=",", quote="\"", fill = TRUE, skip = 3)
View(gdp)
gdp <- read.csv("C:/DataScientist/Getting And Cleaning Data/data/getdata-data-GDP.csv", sep=",", quote="\"", fill = TRUE, skip = 4)
View(gdp)
NullRank <- gdp$V2==''
gdp <- read.csv("C:/DataScientist/Getting And Cleaning Data/data/getdata-data-GDP.csv", sep=",", quote="\"", fill = TRUE, skip = 4 )
ed <- read.csv("C:/DataScientist/Getting And Cleaning Data/data/getdata-data-EDSTATS_Country.csv", sep=",", quote="\"", fill = TRUE, header=TRUE)
sapply(gdp, class)
sapply(ed, class)
gdp <- read.csv("C:/DataScientist/Getting And Cleaning Data/data/getdata-data-GDP.csv", sep=",", quote="\"",  skip = 4 )
ed <- read.csv("C:/DataScientist/Getting And Cleaning Data/data/getdata-data-EDSTATS_Country.csv", sep=",", quote="\"", header=TRUE)
sapply(ed, class)
sapply(gdp, class)
gdp_ed <- merge(gdp, ed, by.x="V1", by.y="CountryCode")
View(ed)
gdp <- read.csv("C:/DataScientist/Getting And Cleaning Data/data/getdata-data-GDP.csv", sep=",", quote="\"",  skip = 4, stringsAsFactors=FALSE )
ed <- read.csv("C:/DataScientist/Getting And Cleaning Data/data/getdata-data-EDSTATS_Country.csv", sep=",", quote="\"", header=TRUE, stringsAsFactors=FALSE)
sapply(gdp, class)
sapply(ed, class)
NullCountry <- gdp$V1==''
View(gdp)
as.numeric(gdp[1,2])
as.numeric(gdp[2,2])
NullCountry <- ed$CountryCode==''
cntryed <- ed[!NullCountry,]
gdp_ed <- merge(gdp, cntryed, by.x="X.1", by.y="CountryCode")
View(gdp_ed)
gdp_ed <- merge(gdp, cntryed, by.x="X", by.y="CountryCode")
View(gdp_ed)
gdp_ed_sorted <- arrange(gdp_ed, desc(X.1))
View(gdp_ed_sorted)
sapply(gdp_ed, class)
gdp_ed <- mutate(gdp_ed, X.1=as.numeric(X.1))
sapply(gdp_ed, class)
gdp_ed_sorted <- arrange(gdp_ed, desc(X.1))
View(gdp_ed_sorted)
gdp_ed_sorted[13,1?3]
gdp_ed_sorted[13,1:3]
gdp_ed_sorted[13,1:4]
?merge
NullRanks <- is.na(gdp_ed_sorted)
gdp_ed_sorted <- gdp_ed_sorted[!NullRanks]
View(gdp_ed_sorted)
gdp_ed_sorted <- arrange(gdp_ed, desc(X.1))
View(gdp_ed_sorted)
gdp_ed_sorted <- gdp_ed_sorted[!NullRanks,]
View(gdp_ed_sorted)
NullRanks <- is.na(gdp_ed_sorted$X.1)
gdp_ed_sorted <- gdp_ed_sorted[!NullRanks,]
View(gdp_ed_sorted)
OECD<- gdp_ed_sorted[gdp_ed_sorted$Income.Group = "High income: OECD"]
OECD<- gdp_ed_sorted[gdp_ed_sorted$Income.Group = "High income: OECD",]
OECD<- gdp_ed_sorted[gdp_ed_sorted$Income.Group == "High income: OECD",]
sum(OECD$X.1)
mean(OECD$X.1)
nonOECD<- gdp_ed_sorted[gdp_ed_sorted$Income.Group == "High income: nonOECD",]
mean(nonOECD$X.1)
lowmidinc<- gdp_ed_sorted[gdp_ed_sorted$Income.Group == "Lower middle income",]
View(lowmidinc)
x <- c(1,2,3,4)
class(x)
x[3]<-"na"
x
x==na
is.ns(x)
is.na(x)
x[3]<-na
x[3]<-NULL
x[3]<-NA
x
x <- c(1,2,3,4)
x[3]<-NA
x
is.na(x)
is.na(x)==TRUE
y<-is.na(x)
y==TRUE
y
setwd("C:/DataScientist/Exploratory Data Analysis/Week1/ExData_Plotting1")
hpc <- read.csv("../data/avgpm24.csv")
hpc <- read.csv("../data/avgpm25.csv")
head(hpc)
dim(hpc)
hpc <- read.csv("../data/household_power_consumption.txt", sep=";", header=TRUE)
dim(hpc)
head(hpc)
library(dplyr)
library(lubridate)
hpc1<- hpc[as.date(Date)>= dmy("01-02-2007"),]
hpc1<- hpc[as.Date(Date)>= dmy("01-02-2007"),]
hpc1<- hpc[as.Date(1)>= dmy("01-02-2007"),]
hpc1<- hpc[as.Date(hpc$Date)>= dmy("01-02-2007"),]
hpc1<- hpc[as.Date(hpc$Date)== as.Date("01-02-2007"),]
head(hpc1)
tail(hpc1)
hpc1<- hpc[as.Date(hpc$Date)== as.Date("02-02-2007"),]
tail(hpc1)
?as.Date
hpc1<- hpc[as.Date(hpc$Date,"%d-%m-%Y")== as.Date("02-02-2007", "%d-%m-%Y"),]
tail(hpc1)
hpc1<- hpc[(as.Date(hpc$Date,"%d-%m-%Y")== as.Date("02-02-2007", "%d-%m-%Y")),]
tail(hpc1)
as.Date(hpc$Date,"%d-%m-%Y")== as.Date("02-02-2007", "%d-%m-%Y")
as.Date(hpc$Date,"%d-%m-%Y")
hpc1<- hpc[(as.Date(hpc$Date,"%d/%m/%Y")== as.Date("02/02/2007", "%d/%m/%Y")),]
tail(hpc1)
hpc1<- hpc[(as.Date(hpc$Date,"%d/%m/%Y")>= as.Date("01/02/2007", "%d/%m/%Y"))&(as.Date(hpc$Date,"%d/%m/%Y")>= as.Date("02/02/2007", "%d/%m/%Y")),]
head(hpc1)
tail(hpc1)
hpc1<- hpc[(as.Date(hpc$Date,"%d/%m/%Y")>= as.Date("01/02/2007", "%d/%m/%Y"))&(as.Date(hpc$Date,"%d/%m/%Y")<= as.Date("02/02/2007", "%d/%m/%Y")),]
tail(hpc1)
head(hpc1)
hist(hpc1$Global_active_power,col="red")
hpc1$Global_active_power=="?"
hpc1[hpc1$Global_active_power=="?",]
View(hpc1)
hist(as.numeric(hpc1$Global_active_power),col="red")
hpc1<- mutate(hpc1, Global_active_power=as.numeric(Global_active_power))
?hist
hist(hpc1$Global_active_power,col="red", main="Global Active Power", xlab="Global Active Power(Kilowatts)")
View(hpc1)
View(hpc1)
hpc1$Global_active_power
View(hpc)
as.numeric(hpc1[1,3])
class(hpc1[1,3])
class(hpc[1,3])
as.numeric(hpc[1,3])
as.numeric(as.character(hpc[1,3])
)
hpc[1,3]
hpc1<- hpc[(as.Date(hpc$Date,"%d/%m/%Y")>= as.Date("01/02/2007", "%d/%m/%Y"))&(as.Date(hpc$Date,"%d/%m/%Y")<= as.Date("02/02/2007", "%d/%m/%Y")),]
hpc1<- mutate(hpc1, Global_active_power=as.numeric(as.character(Global_active_power)))
hist(hpc1$Global_active_power,col="red", main="Global Active Power", xlab="Global Active Power(Kilowatts)")
head(hpc1)
day(hpc1$Date)
weekday(hpc1$Date)
weekdays(hpc1$Date)
library(lubridate)
weekdays(hpc1$Date)
weekdays(as.date(hpc1$Date,"%d/%m/%Y"))
weekdays(as.Date(hpc1$Date,"%d/%m/%Y"))
?paste
paste(hpc1$Date,hpc1$Time)
x<- dmy_hms(paste(hpc1$Date,hpc1$Time))
x
hpc1<- mutate(hpc1, Date_Time=dmy_hms(paste(hpc1$Date,hpc1$Time)))
with(hpc1, plot(hpc1$Date_Time, hpc1$Global_active_power)
)
?plot
?lines
?plot
?lowess
with(hpc1, lines(hpc1$Date_Time, hpc1$Global_active_power))
clear(plot)
with(hpc1, lines(hpc1$Date_Time, hpc1$Global_active_power))
?mch
with(hpc1, lines(hpc1$Date_Time, hpc1$Global_active_power, mch=1))
?lines
with(hpc1, lines(hpc1$Date_Time, hpc1$Global_active_power, type="1"))
with(hpc1, lines(hpc1$Date_Time, hpc1$Global_active_power, type="a"))
with(hpc1, lines(hpc1$Date_Time, hpc1$Global_active_power, type="p"))
with(hpc1, lines(hpc1$Date_Time, hpc1$Global_active_power, pch="p"))
dev.off()
with(hpc1, lines(hpc1$Date_Time, hpc1$Global_active_power, pch="p"))
with(hpc1, plot(hpc1$Date_Time, hpc1$Global_active_power, pch="p"))
dev.off()
with(hpc1, plot(hpc1$Date_Time, hpc1$Global_active_power, pch="1"))
dev.off()
with(hpc1, plot(hpc1$Date_Time, hpc1$Global_active_power, type="p"))
dev.off()
with(hpc1, plot(hpc1$Date_Time, hpc1$Global_active_power, type="1"))
with(hpc1, lines(hpc1$Date_Time, hpc1$Global_active_power, type="1"))
with(hpc1, lines(hpc1$Date_Time, hpc1$Global_active_power))
?lines
head(cars)
plot(cars)
lines(stats::lowess(cars))
lines(cars)
dev.off()
lines(cars)
plot.new()
lines(cars)
plot(cars)
lines(cars)
?plot
dev.off()
with(hpc1, plot(hpc1$Date_Time, hpc1$Global_active_power, type="l"))
with(hpc1, plot(hpc1$Date_Time, hpc1$Global_active_power, type="l", xlab="", ylab="Global Active Power(Kilowatts"))
head(hpc1)
class(hpc1[1,7])
class(hpc1[1,8])
class(hpc1[1,9])
class(hpc1[1,10])
hpc1<- hpc[(as.Date(hpc$Date,"%d/%m/%Y")>= as.Date("01/02/2007", "%d/%m/%Y"))&(as.Date(hpc$Date,"%d/%m/%Y")<= as.Date("02/02/2007", "%d/%m/%Y")),]
hpc1<- mutate(hpc1, Global_active_power=as.numeric(as.character(Global_active_power)),
Sub_metering_1=as.numeric(as.character(Sub_metering_1)),
Sub_metering_2=as.numeric(as.character(Sub_metering_2)))
hpc1<- mutate(hpc1, Date_Time=dmy_hms(paste(hpc1$Date,hpc1$Time)))
with(hpc1, plot(hpc1$Date_Time, hpc1$Sub_metering_1, type="l", xlab="", ylab="Energy Submetering"))
plot(hpc1$Date_Time, hpc1$Sub_metering_2, type="l", xlab="", ylab="Energy Submetering2"))
plot(hpc1$Date_Time, hpc1$Sub_metering_2, type="l", xlab="", ylab="Energy Submetering2")
lines(hpc1$Date_Time, hpc1$Sub_metering_3)
lines(hpc1$Date_Time, hpc1$Sub_metering_1)
with(hpc1, plot(hpc1$Date_Time, c(hpc1$Sub_metering_1,hpc1$Sub_metering_2,hpc1$Sub_metering_3) , type="l", xlab="", ylab="Energy Submetering"))
with(hpc1, plot(hpc1$Date_Time, hpc1$Sub_metering_2 , type="l", xlab="", ylab="Energy Submetering"))
head(hpc1)
tail(hpc1)
hpc1<- hpc[(as.Date(hpc$Date,"%d/%m/%Y")>= as.Date("01/02/2007", "%d/%m/%Y"))&(as.Date(hpc$Date,"%d/%m/%Y")<= as.Date("02/02/2007", "%d/%m/%Y")),]
tail(hpc1)
head(hpc1)
max(hpc1$Sub_metering_1)
max(hpc1$Sub_metering_3)
hpc1<- mutate(hpc1, Global_active_power=as.numeric(as.character(Global_active_power)),
Sub_metering_1=as.numeric(as.character(Sub_metering_1)),
Sub_metering_2=as.numeric(as.character(Sub_metering_2)))
max(hpc1$Sub_metering_1)
max(hpc1$Sub_metering_2)
hpc1<- mutate(hpc1, Date_Time=dmy_hms(paste(hpc1$Date,hpc1$Time)))
with(hpc1, plot(hpc1$Date_Time, hpc1$Sub_metering_1, type="l", xlab="", ylab="Energy Submetering"))
with(subset(hpc1,points(hpc1$Date_Time, hpc1$Sub_metering_2, col="red")))
with(subset(hpc1,points(hpc1$Date_Time, hpc1$Sub_metering_2, type="l", col="red")))
with(points(hpc1$Date_Time, hpc1$Sub_metering_2, type="l", col="red"))
with(hpc1, points(hpc1$Date_Time, hpc1$Sub_metering_2, type="l", col="red"))
dev.close()
dev.off()
with(hpc1, plot(hpc1$Date_Time, hpc1$Sub_metering_1, type="l", xlab="", ylab="Energy Submetering"))
with(hpc1, points(hpc1$Date_Time, hpc1$Sub_metering_2, type="l", col="red"))
with(hpc1, points(hpc1$Date_Time, hpc1$Sub_metering_3, type="l", col="blue"))
dev.off()
library(dplyr)
library(lubridate)
hpc <- read.csv("../data/household_power_consumption.txt", sep=";", header=TRUE)
hpc1<- hpc[(as.Date(hpc$Date,"%d/%m/%Y")>= as.Date("01/02/2007", "%d/%m/%Y"))&(as.Date(hpc$Date,"%d/%m/%Y")<= as.Date("02/02/2007", "%d/%m/%Y")),]
hpc1<- mutate(hpc1, Global_active_power=as.numeric(as.character(Global_active_power)),
Sub_metering_1=as.numeric(as.character(Sub_metering_1)),
Sub_metering_2=as.numeric(as.character(Sub_metering_2)))
hpc1<- mutate(hpc1, Date_Time=dmy_hms(paste(hpc1$Date,hpc1$Time)))
with(hpc1, plot(hpc1$Date_Time, hpc1$Sub_metering_1, type="l", xlab="", ylab="Energy Submetering"))
with(hpc1, points(hpc1$Date_Time, hpc1$Sub_metering_2, type="l", col="red"))
with(hpc1, points(hpc1$Date_Time, hpc1$Sub_metering_3, type="l", col="blue"))
legend("topright",pch="l",col=c("black", "blue", "red"), legend=c("Sub_metring_1", "Sub_metring_3","Sub_metring_3"))
?legend
pchShow()
pchShow <-
function(extras = c("*",".", "o","O","0","+","-","|","%","#"),
cex = 3, ## good for both .Device=="postscript" and "x11"
col = "red3", bg = "gold", coltext = "brown", cextext = 1.2,
main = paste("plot symbols :  points (...  pch = *, cex =",
cex,")"))
{
nex <- length(extras)
np  <- 26 + nex
ipch <- 0:(np-1)
k <- floor(sqrt(np))
dd <- c(-1,1)/2
rx <- dd + range(ix <- ipch %/% k)
ry <- dd + range(iy <- 3 + (k-1)- ipch %% k)
pch <- as.list(ipch) # list with integers & strings
if(nex > 0) pch[26+ 1:nex] <- as.list(extras)
plot(rx, ry, type = "n", axes  =  FALSE, xlab = "", ylab = "", main = main)
abline(v = ix, h = iy, col = "lightgray", lty = "dotted")
for(i in 1:np) {
pc <- pch[[i]]
## 'col' symbols with a 'bg'-colored interior (where available) :
points(ix[i], iy[i], pch = pc, col = col, bg = bg, cex = cex)
if(cextext > 0)
text(ix[i] - 0.3, iy[i], pc, col = coltext, cex = cextext)
}
}
pchShow()
pchShow(c("o","O","0"), cex = 2.5)
pchShow(NULL, cex = 4, cextext = 0, main = NULL)
source('C:/DataScientist/Exploratory Data Analysis/Week1/ExData_Plotting1/plot3.R')
plot3()
source('C:/DataScientist/Exploratory Data Analysis/Week1/ExData_Plotting1/plot1.R')
source('C:/DataScientist/Exploratory Data Analysis/Week1/ExData_Plotting1/plot2.R')
par(mfrow=c(2,2))
plot1()
plot2()
source('C:/DataScientist/Exploratory Data Analysis/Week1/ExData_Plotting1/plot4.R')
plot4()
library(dplyr)
library(lubridate)
hpc <- read.csv("../data/household_power_consumption.txt", sep=";", header=TRUE)
hpc1<- hpc[(as.Date(hpc$Date,"%d/%m/%Y")>= as.Date("01/02/2007", "%d/%m/%Y"))&(as.Date(hpc$Date,"%d/%m/%Y")<= as.Date("02/02/2007", "%d/%m/%Y")),]
hpc1<- mutate(hpc1, Global_active_power=as.numeric(as.character(Global_active_power)),
Global_reactive_power=as.numeric(as.character(Global_reactive_power)),
Sub_metering_1=as.numeric(as.character(Sub_metering_1)),
Sub_metering_2=as.numeric(as.character(Sub_metering_2)),
Voltage = as.numeric(as.character(Voltage)))
hpc1<- mutate(hpc1, DateTime=dmy_hms(paste(hpc1$Date,hpc1$Time)))
# par(mfrow=c(2,2))
# with(hpc1, plot(hpc1$DateTime, hpc1$Global_active_power, type="l", xlab="", ylab="Global Active Power(Kilowatts"))
with(hpc1, plot(hpc1$DateTime, hpc1$Sub_metering_1, type="l", xlab="", ylab="Energy Submetering"))
with(hpc1, points(hpc1$DateTime, hpc1$Sub_metering_2, type="l", col="red"))
with(hpc1, points(hpc1$DateTime, hpc1$Sub_metering_3, type="l", col="blue"))
legend("topright",pch="l",col=c("black", "blue", "red"), legend=c("Sub_metring_1", "Sub_metring_2","Sub_metring_3"))
#  with(hpc1, plot(hpc1$DateTime, hpc1$Voltage, type="l", xlab="DateTime", ylab="Voltage"))
#  with(hpc1, plot(hpc1$DateTime, hpc1$Global_Reactive_power, type="l", xlab="DateTime", ylab="Global Reactive Power(Kilowatts)"))
source('C:/DataScientist/Exploratory Data Analysis/Week1/ExData_Plotting1/plot4.R')
plot4()
source('C:/DataScientist/Exploratory Data Analysis/Week1/ExData_Plotting1/plot4.R')
plot4()
library(dplyr)
library(lubridate)
hpc <- read.csv("../data/household_power_consumption.txt", sep=";", header=TRUE)
hpc1<- hpc[(as.Date(hpc$Date,"%d/%m/%Y")>= as.Date("01/02/2007", "%d/%m/%Y"))&(as.Date(hpc$Date,"%d/%m/%Y")<= as.Date("02/02/2007", "%d/%m/%Y")),]
hpc1<- mutate(hpc1, Global_active_power=as.numeric(as.character(Global_active_power)),
Global_reactive_power=as.numeric(as.character(Global_reactive_power)),
Sub_metering_1=as.numeric(as.character(Sub_metering_1)),
Sub_metering_2=as.numeric(as.character(Sub_metering_2)),
Voltage = as.numeric(as.character(Voltage)))
hpc1<- mutate(hpc1, DateTime=dmy_hms(paste(hpc1$Date,hpc1$Time)))
hpc1[,4]
names(hpc1)
class(hpc1)
class(hpc1[1,4])
with(hpc1, plot(hpc1$DateTime, hpc1$Global_reactive_power, type="l", xlab="DateTime", ylab="Global Reactive Power(Kilowatts)"))
source('C:/DataScientist/Exploratory Data Analysis/Week1/ExData_Plotting1/plot4.R')
plot4()
source('C:/DataScientist/Exploratory Data Analysis/Week1/ExData_Plotting1/plot2.R')
plot2()
source('C:/DataScientist/Exploratory Data Analysis/Week1/ExData_Plotting1/plot1.R')
plot1()
source('C:/DataScientist/Exploratory Data Analysis/Week1/ExData_Plotting1/plot3.R')
plot3()
source('C:/DataScientist/Exploratory Data Analysis/Week1/ExData_Plotting1/plot4.R')
plot4()
